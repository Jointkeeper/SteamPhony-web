version: "3.8"
services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: steamphony_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build: .
    container_name: steamphony-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/steamphony_dev?schema=public
      - PORT=3001
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "3001:3001"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:docker
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"

  email-worker:
    build: .
    container_name: email-worker
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/steamphony_dev?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run worker:email
    depends_on:
      - redis
      - postgres

  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    depends_on:
      - api

  loki:
    image: grafana/loki:2.9.7
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    volumes:
      - loki_data:/loki

  grafana:
    image: grafana/grafana:10.3.3
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-changeme}
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus
      - loki
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/:/etc/grafana/provisioning/:ro

volumes:
  postgres_data:
  prometheus_data:
  loki_data:
  grafana_data: 